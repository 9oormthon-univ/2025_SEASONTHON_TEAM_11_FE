name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      BUILD_DIR: dist
      REMOTE_DIR: /var/www/youthjob
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PORT: ${{ secrets.SSH_PORT || 22 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build (Vite → dist/)
        # 🔑 Vite는 VITE_ 접두사 환경변수를 빌드타임에 embed 합니다.
        env:
          VITE_KAKAO_MAP_JS_KEY: ${{ secrets.VITE_KAKAO_MAP_JS_KEY }}
        run: npm run build

      # 7자리 SHA로 릴리즈 이름 생성 (Runner에서 계산)
      - name: Prepare release name
        id: prep
        run: echo "REL=release_${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Pack dist as tar.gz
        run: tar -C "${{ env.BUILD_DIR }}" -czf bundle.tgz .

      # 원격에 동일 경로 생성 (→ steps.prep.outputs.REL 사용)
      - name: Prepare temp dir on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
          script: |
            set -e
            REL="/tmp/${{ steps.prep.outputs.REL }}"
            mkdir -p "$REL"

      # bundle 업로드 (동일 경로)
      - name: Upload bundle
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
          source: "bundle.tgz"
          target: "/tmp/${{ steps.prep.outputs.REL }}/"

      # 해제 → 루트로 동기화 → nginx reload (동일 경로)
      - name: Activate release
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
        # ↓↓↓ 여기서도 steps.prep.outputs.REL을 문자열로 “주입”해야 함
          script: |
            set -e
            REL="/tmp/${{ steps.prep.outputs.REL }}"
            DEST="${{ env.REMOTE_DIR }}"

            command -v tar >/dev/null 2>&1 || (sudo apt-get update -y && sudo apt-get install -y tar)
            command -v rsync >/dev/null 2>&1 || (sudo apt-get update -y && sudo apt-get install -y rsync)

            sudo mkdir -p "$DEST"
            sudo chown -R $USER:$USER "$DEST"

            mkdir -p "$REL/unpack"
            tar -xzf "$REL/bundle.tgz" -C "$REL/unpack"
            rsync -a --delete "$REL/unpack/" "$DEST/"

            find "$DEST" -type d -exec chmod 755 {} \;
            find "$DEST" -type f -exec chmod 644 {} \;

            sudo nginx -t && sudo systemctl reload nginx
            test -f "$DEST/index.html"
            rm -rf "$REL"
