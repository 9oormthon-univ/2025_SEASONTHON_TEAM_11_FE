name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]        # main push 시 자동 배포
  workflow_dispatch:             # 수동 실행 허용

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      BUILD_DIR: dist
      REMOTE_DIR: /var/www/youthjob
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PORT: ${{ secrets.SSH_PORT || 22 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build (Vite → dist/)
        run: npm run build

      # dist '내용물'만 담도록 tar 생성
      - name: Pack dist as tar.gz
        run: tar -C "${{ env.BUILD_DIR }}" -czf bundle.tgz .

      # 원격에 임시 작업 폴더 생성
      - name: Prepare temp dir on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
          script: |
            set -e
            REL="/tmp/release_${GITHUB_SHA::7}"
            mkdir -p "$REL"

      # bundle 업로드
      - name: Upload bundle
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
          source: "bundle.tgz"
          target: "/tmp/release_${{ github.sha || 'sha' }}/"   # 동일 SHA 경로

      # 서버에서 해제 → 루트로 동기화 → nginx reload
      - name: Activate release
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
          script: |
            set -e
            REL="/tmp/release_${GITHUB_SHA::7}"
            DEST="${{ env.REMOTE_DIR }}"

            # 도구 보장
            command -v tar >/dev/null 2>&1 || (sudo apt-get update -y && sudo apt-get install -y tar)
            command -v rsync >/dev/null 2>&1 || (sudo apt-get update -y && sudo apt-get install -y rsync)

            # 목표 디렉토리 준비
            sudo mkdir -p "$DEST"
            sudo chown -R $USER:$USER "$DEST"

            # 해제(임시) → 내용물만 동기화
            mkdir -p "$REL/unpack"
            tar -xzf "$REL/bundle.tgz" -C "$REL/unpack"
            rsync -a --delete "$REL/unpack/" "$DEST/"

            # 퍼미션(정적 서빙)
            find "$DEST" -type d -exec chmod 755 {} \;
            find "$DEST" -type f -exec chmod 644 {} \;

            # Nginx 적용 및 헬스체크
            sudo nginx -t && sudo systemctl reload nginx
            test -f "$DEST/index.html"

            # 임시 정리
            rm -rf "$REL"
